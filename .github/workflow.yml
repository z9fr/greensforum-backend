name: ci-cd-deply

on:
  push:
    branches: [prod]
    on: [ push ]

  workflow_dispatch:

jobs:
  build_env:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        
      - name: Create env file
        run: |
          touch .env
          echo "${{ secrets.DB_USERNAME }}" >> .env
          echo "${{ secrets.DB_PASSWORD }}" >> .env
          echo "${{ secrets.DB_HOST }}" >> .env
          echo "${{ secrets.DB_PORT }}" >> .env
          echo "${{ secrets.DB_TABLE }}" >> .env
          echo "${{ secrets.JWT_SECRET }}" >> .env
          echo "${{ secrets.REFRESH_TOKEN_SECRET }}" >> .env
          cat .env
          

  push_to_docker_hub:
    runs-on: ubuntu-latest
    needs: [build_env]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/greenforum-api:latest
            
  deploy:
    runs-on: ubuntu-latest   
    needs: [push_to_docker_hub]
    
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_SSH_HOST }}
          username: ${{ secrets.VPS_SSH_USERNAME }}
          key: ${{ secrets.VPS_SSH_SECRET }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            echo "Pull new image"
            sudo docker-compose -f /home/${{ secrets.VPS_SSH_USERNAME }}/applications/greensforum-backend/docker-compose.yml pull
            echo "Restart the container"
            sudo docker-compose -f /home/${{ secrets.VPS_SSH_USERNAME }}/applications/greensforum-backend/docker-compose.yml up --force-recreate --build --no-deps -d
            echo "Delete old image"
            sudo docker image prune -f
